(self.webpackChunkcomputer_science_stuff=self.webpackChunkcomputer_science_stuff||[]).push([[305],{7977:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return p},default:function(){return d}});var n=a(2122),i=a(9756),l=(a(7294),a(3905)),r=["components"],o={id:"sql",title:"SQL",sidebar_position:2,slug:"/notes/sql",custom_edit_url:null},s=void 0,m={unversionedId:"Notes/sql",id:"Notes/sql",isDocsHomePage:!1,title:"SQL",description:"I am using PostgreSQL for my notes but it should look relatively similar to MySQL",source:"@site/docs/Notes/SQL.md",sourceDirName:"Notes",slug:"/notes/sql",permalink:"/notes/sql",editUrl:null,version:"current",sidebarPosition:2,frontMatter:{id:"sql",title:"SQL",sidebar_position:2,slug:"/notes/sql",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Data Structures",permalink:"/notes/data-structures"},next:{title:"Beach-Boiis",permalink:"/Projects/beach-boiis"}},p=[{value:"Creating a Table",id:"creating-a-table",children:[]},{value:"Inserting Into A Table",id:"inserting-into-a-table",children:[]},{value:"Querying a Table",id:"querying-a-table",children:[]},{value:"Join Tables",id:"join-tables",children:[]},{value:"Aggregate Functions",id:"aggregate-functions",children:[]},{value:"Updating Table",id:"updating-table",children:[]},{value:"Deleting",id:"deleting",children:[]}],u={toc:p};function d(e){var t=e.components,o=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"I am using PostgreSQL for my notes but it should look relatively similar to MySQL"),(0,l.kt)("p",{parentName:"div"},"Also ",(0,l.kt)("em",{parentName:"p"},"everything in sql is case in-sensitive")))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Semi-Colons Matter in order to have Postgres run the command"))),(0,l.kt)("h2",{id:"creating-a-table"},"Creating a Table"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Creating a table requires the key word ",(0,l.kt)("inlineCode",{parentName:"li"},"create table")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"CREATE TABLE")," then the title of the table"),(0,l.kt)("li",{parentName:"ul"},"The following variables within the parenthesis provide the ",(0,l.kt)("strong",{parentName:"li"},"column names")," and ",(0,l.kt)("strong",{parentName:"li"},"type")),(0,l.kt)("li",{parentName:"ul"},"A list of all types can be found ",(0,l.kt)("a",{parentName:"li",href:"https://www.w3schools.com/sql/sql_datatypes.asp"},"here"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Popular types include:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"char: a fixed length string from 0 to 255 given a size parameter"),(0,l.kt)("li",{parentName:"ul"},"varchar: a variable length string can be from 0 to 65535 given a size parameter"),(0,l.kt)("li",{parentName:"ul"},"int/integer: a medium sized integer from -2147483648 to 2147483647"),(0,l.kt)("li",{parentName:"ul"},"datetime: returns UTC date time"),(0,l.kt)("li",{parentName:"ul"},"real: floating point precision number from -3.40E + 38 to 3.40E + 38"))),(0,l.kt)("li",{parentName:"ul"},"There is also the ",(0,l.kt)("inlineCode",{parentName:"li"},"NOT NULL")," constraint that prevents a column from being null")))),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="CREATE TABLE Example"',title:'"CREATE',TABLE:!0,'Example"':!0},"--For PostgreSQL use \\e to enter vi mode to add multiple lines--\n\nCREATE TABLE weather(\n  city  varchar(80),\n  temp_lo integer,\n  temp_hi integer,\n  prcp  real,\n  date date\n);\n\nCREATE TABLE cities(\n  name varchar(80),\n  location point\n);\n\n")),(0,l.kt)("h2",{id:"inserting-into-a-table"},"Inserting Into A Table"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To insert into a row the keywords ",(0,l.kt)("inlineCode",{parentName:"li"},"INSERT INTO")," is used follow by the ",(0,l.kt)("strong",{parentName:"li"},"table name"),", then the keyword ",(0,l.kt)("inlineCode",{parentName:"li"},"VALUES")," is used which corresponses to each column of the table"),(0,l.kt)("li",{parentName:"ul"},"Another method of insertion is passing in the ",(0,l.kt)("strong",{parentName:"li"},"column names")," following the ",(0,l.kt)("strong",{parentName:"li"},"table name")," if the ",(0,l.kt)("inlineCode",{parentName:"li"},"NOT NULL")," constraint is not in place you may omit column values")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="INSERT Example"',title:'"INSERT','Example"':!0},"INSERT INTO weather\n  VALUES ('Blacksburg', 61, 88, .10, '2021-7-24');\n\n--omitting temp_lo--\nINSERT INTO weather(prcp, city, temp_hi, date)\n  VALUES (.10, 'New York', 82, '2021-7-24');\n\n")),(0,l.kt)("h2",{id:"querying-a-table"},"Querying a Table"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To query a table the ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"FROM")," keywords are needed"),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," keyword selects a column of the table or if the ",(0,l.kt)("inlineCode",{parentName:"li"},"*")," is used selects all columns of the table"),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"FROM")," keyword identifies the table that needs to be queried",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"AS")," keywords is optional and renames the column name like ES6 JavaScript imports")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example of As in ES6 imports"',title:'"Example',of:!0,As:!0,in:!0,ES6:!0,'imports"':!0},"import { BrowserRouter as Router } from 'react-router-dom'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="SELECT Examples"',title:'"SELECT','Examples"':!0},"--selects all columns from weather--\nSELECT * FROM weather;\n\n--selects avg temp as new column--\nSELECT city, (temp_lo+temp_hi)/2 as avg_temp, prcp FROM weather;\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"WHERE")," keyword is a boolean statement that filters the query based on if it is true")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="WHERE Example"',title:'"WHERE','Example"':!0},'SELECT * FROM weather WHERE city = "Blacksburg";\n')),(0,l.kt)("h4",{id:"output"},"Output"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"output of where example",src:a(4181).Z})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"DISTINCT")," keyword removes all duplicates from the query and ",(0,l.kt)("inlineCode",{parentName:"li"},"ORDER BY")," specifies the column to order by (could be alphabetically or numerically )")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="DISTINCT and ORDER BY Example"',title:'"DISTINCT',and:!0,ORDER:!0,BY:!0,'Example"':!0},"SELECT DISTINCT name FROM cities ORDER BY name;\n")),(0,l.kt)("h4",{id:"output-1"},"Output"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"distinctAndOrderByOutput",src:a(98).Z})),(0,l.kt)("h2",{id:"join-tables"},"Join Tables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To join a table with another table the ",(0,l.kt)("inlineCode",{parentName:"li"},"JOIN")," keyword is needed"),(0,l.kt)("li",{parentName:"ul"},"A join combines multiple tables into ",(0,l.kt)("strong",{parentName:"li"},"one")," table to make queries against"),(0,l.kt)("li",{parentName:"ul"},"To do a join you have to use the ",(0,l.kt)("inlineCode",{parentName:"li"},"JOIN")," keyword and ",(0,l.kt)("inlineCode",{parentName:"li"},"ON")," keyword along with a ",(0,l.kt)("a",{parentName:"li",href:"#querying-a-table"},"table query"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="JOIN Example"',title:'"JOIN','Example"':!0},"SELECT * FROM weather JOIN cities ON name;\n\n--prevents duplicate columns--\nSELECT weather.city, weather.temp_lo, weather.temp_hi, weather.prcp, weather.date, cities.location\n    FROM weather JOIN cities ON weather.city = cities.name;\n\n")),(0,l.kt)("h4",{id:"output-2"},"Output"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"joinOutput",src:a(6149).Z})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Outer Joins vs Inner Joins:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An ",(0,l.kt)("strong",{parentName:"li"},"inner join")," will combine as many matching rows as possible between the 2 tables like the output above"),(0,l.kt)("li",{parentName:"ul"},"An ",(0,l.kt)("strong",{parentName:"li"},"outer join")," will combine all the rows to one table and insert nulls if there is no match "),(0,l.kt)("li",{parentName:"ul"},"For an outer join it can either be from the LEFT table or the RIGHT table"))),(0,l.kt)("li",{parentName:"ul"},"Outer Joins require the same set up as an inner join (the previous steps above) only instead of just ",(0,l.kt)("inlineCode",{parentName:"li"},"JOIN")," there it is the ",(0,l.kt)("inlineCode",{parentName:"li"},"direction of the join")," + ",(0,l.kt)("inlineCode",{parentName:"li"},"OUTER JOIN"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="LEFT OUTER JOIN Example"',title:'"LEFT',OUTER:!0,JOIN:!0,'Example"':!0},"SELECT * FROM cities LEFT OUTER JOIN weather ON name = city;\n\n")),(0,l.kt)("h4",{id:"output-3"},"Output"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"leftOuterJoin",src:a(4959).Z})),(0,l.kt)("h2",{id:"aggregate-functions"},"Aggregate Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"These functions help to consolidate data from the dB")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"--max--\nSELECT max(temp_lo) FROM weather;\n\n--chaining max--\nSELECT city FROM weather WHERE temp_lo = (SELECT max(temp_lo) FROM weather);\n\n--Group By--\nSELECT city, max(temp_lo) FROM weather GROUP BY city;\n\n--Having--\nSELECT city, max(temp_lo) FROM weather GROUP BY city HAVING max(temp_lo) < 40;\n")),(0,l.kt)("h2",{id:"updating-table"},"Updating Table"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To update a row in the table use the ",(0,l.kt)("inlineCode",{parentName:"li"},"UPDATE")," keyword followed by the ",(0,l.kt)("strong",{parentName:"li"},"table name")," then use the ",(0,l.kt)("inlineCode",{parentName:"li"},"SET")," keyword to override the data and ",(0,l.kt)("inlineCode",{parentName:"li"},"WHERE")," to identify the parameters")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="UPDATE Example"',title:'"UPDATE','Example"':!0},"--updates date of New York--\nUPDATE weather\n  SET date = '2021-7-25'\n  WHERE city = 'New York';\n\n")),(0,l.kt)("h2",{id:"deleting"},"Deleting"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To delete a row from a table use the ",(0,l.kt)("inlineCode",{parentName:"li"},"DELETE FROM")," keywords followed by the ",(0,l.kt)("strong",{parentName:"li"},"table name")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"WHERE")," to identify the parameters"),(0,l.kt)("li",{parentName:"ul"},"To delete a table use the keywords ",(0,l.kt)("inlineCode",{parentName:"li"},"DROP TABLE")," followed by the ",(0,l.kt)("strong",{parentName:"li"},"table name"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="DELETE and DROP TABLE Example"',title:'"DELETE',and:!0,DROP:!0,TABLE:!0,'Example"':!0},"DELETE FROM weather WHERE city = 'Tokyo';\n\nDROP TABLE weather, cities;\n")))}d.isMDXComponent=!0},98:function(e,t,a){"use strict";t.Z=a.p+"assets/images/distinctAndOrderByOutput-a5939df78eab1b536c5e76393a8e392e.png"},6149:function(e,t,a){"use strict";t.Z=a.p+"assets/images/joinOutput-3fa3df335417b24077e6fab778509a1f.png"},4959:function(e,t,a){"use strict";t.Z=a.p+"assets/images/leftOuterJoin-3f73405220b8a6510a1a7e81032b3740.png"},4181:function(e,t,a){"use strict";t.Z=a.p+"assets/images/whereoutput-9fc306993bb91c11c8b9f826809217fd.png"}}]);